{"language": {
    "metadata": {"property": [
        {
            "name": "mimetypes",
            "content": "text/x-java"
        },
        {
            "name": "globs",
            "content": "*.java"
        },
        {
            "name": "line-comment-start",
            "content": "//"
        },
        {
            "name": "block-comment-start",
            "content": "/*"
        },
        {
            "name": "block-comment-end",
            "content": "*/"
        }
    ]},
    "_name": "Java",
    "_section": "Source",
    "styles": {"style": [
        {
            "_name": "Comment",
            "map-to": "def:comment",
            "id": "comment"
        },
        {
            "_name": "Escaped Character",
            "map-to": "def:special-char",
            "id": "escaped-character"
        },
        {
            "_name": "String",
            "map-to": "def:string",
            "id": "string"
        },
        {
            "_name": "Character",
            "map-to": "def:character",
            "id": "char"
        },
        {
            "_name": "External",
            "map-to": "def:preprocessor",
            "id": "external"
        },
        {
            "_name": "Declaration",
            "map-to": "def:type",
            "id": "declaration"
        },
        {
            "_name": "Storage Class",
            "map-to": "def:type",
            "id": "storage-class"
        },
        {
            "_name": "Scope Declaration",
            "map-to": "def:type",
            "id": "scope-declaration"
        },
        {
            "_name": "Keyword",
            "map-to": "def:keyword",
            "id": "keyword"
        },
        {
            "_name": "Null Value",
            "map-to": "def:special-constant",
            "id": "null-value"
        },
        {
            "_name": "Boolean value",
            "map-to": "def:boolean",
            "id": "boolean"
        },
        {
            "_name": "Number",
            "map-to": "def:decimal",
            "id": "number"
        },
        {
            "_name": "Future Reserved Keywords",
            "map-to": "def:reserved",
            "id": "reserved"
        },
        {
            "_name": "Data Type",
            "map-to": "def:type",
            "id": "type"
        }
    ]},
    "id": "java",
    "version": 2,
    "definitions": {
        "context": [
            {
                "include": {"context": {
                    "match": "\\%{escaped-character}",
                    "id": "escaped-character",
                    "style-ref": "escaped-character"
                }},
                "class-disabled": "no-spell-check",
                "start": "\"",
                "end": "\"",
                "id": "string",
                "class": "string",
                "style-ref": "string",
                "end-at-line-end": true
            },
            {
                "match": "'(\\%{escaped-character}|.)'",
                "id": "char",
                "style-ref": "char"
            },
            {
                "id": "externals",
                "keyword": [
                    "import",
                    "package"
                ],
                "style-ref": "external"
            },
            {
                "id": "declarations",
                "keyword": [
                    "class",
                    "enum",
                    "extends",
                    "implements",
                    "instanceof",
                    "interface",
                    "native",
                    "throws"
                ],
                "style-ref": "declaration"
            },
            {
                "id": "primitive-types",
                "keyword": [
                    "boolean",
                    "byte",
                    "char",
                    "double",
                    "float",
                    "int",
                    "long",
                    "short",
                    "void"
                ],
                "style-ref": "type"
            },
            {
                "id": "storage-class",
                "keyword": [
                    "abstract",
                    "final",
                    "static",
                    "strictfp",
                    "synchronized",
                    "transient",
                    "volatile"
                ],
                "style-ref": "storage-class"
            },
            {
                "id": "scope-declarations",
                "keyword": [
                    "private",
                    "protected",
                    "public"
                ],
                "style-ref": "scope-declaration"
            },
            {
                "id": "flow",
                "keyword": [
                    "assert",
                    "break",
                    "case",
                    "catch",
                    "continue",
                    "default",
                    "do",
                    "else",
                    "finally",
                    "for",
                    "if",
                    "return",
                    "throw",
                    "switch",
                    "try",
                    "while"
                ],
                "style-ref": "keyword"
            },
            {
                "id": "memory",
                "keyword": [
                    "new",
                    "super",
                    "this"
                ],
                "style-ref": "keyword"
            },
            {
                "id": "future-reserved-words",
                "keyword": [
                    "const",
                    "goto"
                ],
                "style-ref": "reserved"
            },
            {
                "id": "null-value",
                "keyword": null,
                "style-ref": "null-value"
            },
            {
                "id": "boolean",
                "keyword": [
                    false,
                    true
                ],
                "style-ref": "boolean"
            },
            {
                "match": {
                    "extended": true,
                    "content": "(\\b([0-9]+|0[xX][0-9a-fA-F]+)[Ll]?\\b|\n         \\b(([0-9]+[Ee][-]?[0-9]+|\n            ([0-9]*\\.[0-9]+|[0-9]+\\.)([Ee][-]?[0-9]+)?)[fFdD]?|\n            [0-9]+[FfDd]))"
                },
                "id": "numeric",
                "style-ref": "number"
            },
            {
                "include": {"context": [
                    {
                        "ref": "def:c-like-comment",
                        "style-ref": "comment"
                    },
                    {
                        "ref": "def:c-like-comment-multiline",
                        "style-ref": "comment"
                    },
                    {"ref": "def:c-like-close-comment-outside-comment"},
                    {"ref": "string"},
                    {"ref": "char"},
                    {"ref": "externals"},
                    {"ref": "declarations"},
                    {"ref": "primitive-types"},
                    {"ref": "storage-class"},
                    {"ref": "scope-declarations"},
                    {"ref": "flow"},
                    {"ref": "memory"},
                    {"ref": "future-reserved-words"},
                    {"ref": "null-value"},
                    {"ref": "boolean"},
                    {"ref": "numeric"}
                ]},
                "id": "java",
                "class": "no-spell-check"
            }
        ],
        "define-regex": {
            "id": "escaped-character",
            "extended": true,
            "content": "\\\\(               # leading backslash\n      [\\\\\\\"\\'nrbtf] |   # escaped character\n      [0-9]{1,3}    |   # latin encoded char\n      u[0-9]{1,4}       # unicode char\n      )"
        }
    }
}}