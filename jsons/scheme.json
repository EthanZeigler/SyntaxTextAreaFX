{"language": {
    "metadata": {"property": [
        {
            "name": "mimetypes",
            "content": "text/x-scheme"
        },
        {
            "name": "globs",
            "content": "*.scm"
        },
        {
            "name": "line-comment-start",
            "content": ";"
        }
    ]},
    "_name": "Scheme",
    "_section": "Source",
    "styles": {"style": [
        {
            "_name": "Comment",
            "map-to": "def:comment",
            "id": "comment"
        },
        {
            "_name": "Boolean",
            "map-to": "def:boolean",
            "id": "boolean"
        },
        {
            "_name": "String",
            "map-to": "def:string",
            "id": "string"
        },
        {
            "_name": "Keyword",
            "map-to": "def:keyword",
            "id": "keyword"
        },
        {
            "_name": "Function",
            "map-to": "def:function",
            "id": "function"
        }
    ]},
    "id": "scheme",
    "version": 2,
    "definitions": {"context": [
        {
            "include": {"context": {"ref": "def:in-comment"}},
            "class-disabled": "no-spell-check",
            "start": ";",
            "id": "line-comment",
            "class": "comment",
            "style-ref": "comment",
            "end-at-line-end": true
        },
        {
            "include": {"context": {"ref": "def:escape"}},
            "class-disabled": "no-spell-check",
            "start": "\"",
            "end": "\"",
            "id": "string",
            "class": "string",
            "style-ref": "string"
        },
        {
            "prefix": "(?<![\\w\\d_-])",
            "id": "keyword",
            "suffix": "(?![\\w\\d_-])",
            "keyword": [
                "and",
                "begin",
                "case",
                "cond-expand",
                "cond",
                "define-accessor",
                "define-class",
                "defined\\?",
                "define-generic",
                "define",
                "define\\*",
                "define-macro",
                "define-method",
                "define-module",
                "define-private",
                "define-public",
                "define\\*-public",
                "define-reader-ctor",
                "define-syntax",
                "define-syntax-macro",
                "defmacro",
                "defmacro\\*",
                "defmacro\\*-public",
                "delay",
                "do",
                "else",
                "fluid-let",
                "if",
                "lambda",
                "let",
                "let\\*",
                "letrec",
                "letrec-syntax",
                "let-syntax",
                "or",
                "quasiquote",
                "quote",
                "set\\!",
                "syntax-rules",
                "unquote"
            ],
            "style-ref": "keyword"
        },
        {
            "prefix": "(?<![\\w\\d_-])",
            "id": "function",
            "suffix": "(?![\\w\\d_-])",
            "keyword": [
                "abs",
                "acos",
                "angle",
                "append",
                "apply",
                "asin",
                "assoc",
                "assq",
                "assv",
                "atan",
                "boolean\\?",
                "caaar",
                "caadr",
                "caar",
                "cadar",
                "caddr",
                "cadr",
                "call/cc",
                "call-with-current-continuation",
                "call-with-input-file",
                "call-with-output-file",
                "call-with-values",
                "car",
                "catch",
                "cdaar",
                "cdadr",
                "cdar",
                "cddar",
                "cdddr",
                "cddr",
                "cdr",
                "ceiling",
                "char-alphabetic\\?",
                "char-ci>=\\?",
                "char-ci>\\?",
                "char-ci\\=\\?",
                "char-ci<=\\?",
                "char-ci<\\?",
                "char-downcase",
                "char->integer",
                "char>=\\?",
                "char>\\?",
                "char=\\?",
                "char\\?",
                "char-lower-case\\?",
                "char<=\\?",
                "char<\\?",
                "char-numeric\\?",
                "char-ready\\?",
                "char-upcase",
                "char-upper-case\\?",
                "char-whitespace\\?",
                "close-input-port",
                "close-output-port",
                "complex\\?",
                "cons",
                "cos",
                "current-input-port",
                "current-output-port",
                "delete-file",
                "display",
                "dynamic-wind",
                "eof-object\\?",
                "eq\\?",
                "equal\\?",
                "eqv\\?",
                "eval",
                "even\\?",
                "exact->inexact",
                "exact\\?",
                "exit",
                "exp",
                "expt",
                "file-exists\\?",
                "file-or-directory-modify-seconds",
                "floor",
                "force",
                "for-each",
                "gcd",
                "gensym",
                "getenv",
                "get-output-string",
                "imag-part",
                "inexact\\?",
                "input-port\\?",
                "integer->char",
                "integer\\?",
                "lcm",
                "length",
                "list->string",
                "list->vector",
                "list",
                "list\\?",
                "list-ref",
                "list-tail",
                "load",
                "log",
                "magnitude",
                "make-polar",
                "make-rectangular",
                "make-string",
                "make-vector",
                "map",
                "max",
                "member",
                "memq",
                "memv",
                "min",
                "modulo",
                "negative\\?",
                "newline",
                "nil",
                "not",
                "null\\?",
                "number->string",
                "number\\?",
                "odd\\?",
                "open-input-file",
                "open-input-string",
                "open-output-file",
                "open-output-string",
                "output-port\\?",
                "pair\\?",
                "peek-char",
                "port\\?",
                "positive\\?",
                "procedure\\?",
                "quotient",
                "rational\\?",
                "read-char",
                "read",
                "read-line",
                "real\\?",
                "real-part",
                "remainder",
                "reverse",
                "reverse\\!",
                "round\\",
                "set-car\\!",
                "set-cdr\\!",
                "sin",
                "sqrt",
                "string-append",
                "string-ci>=\\?",
                "string-ci>\\?",
                "string-ci=\\?",
                "string-ci<=\\?",
                "string-ci<\\?",
                "string-copy",
                "string-fill\\!",
                "string>=\\?",
                "string>\\?",
                "string->list",
                "string->number",
                "string->symbol",
                "string",
                "string=\\?",
                "string\\?",
                "string-length",
                "string<=\\?",
                "string<\\?",
                "string-ref",
                "string-set\\!",
                "substring",
                "symbol->string",
                "symbol\\?",
                "system",
                "tan",
                "truncate",
                "values",
                "vector-fill\\!",
                "vector->list",
                "vector",
                "vector\\?",
                "vector-length",
                "vector-ref",
                "vector-set\\!",
                "with-input-from-file",
                "with-output-to-file",
                "write-char",
                "write",
                "zero\\?"
            ],
            "style-ref": "function"
        },
        {
            "match": "#[ft]",
            "id": "boolean-value",
            "style-ref": "boolean"
        },
        {
            "include": {"context": [
                {"ref": "line-comment"},
                {"ref": "string"},
                {"ref": "keyword"},
                {"ref": "function"},
                {"ref": "boolean-value"}
            ]},
            "id": "scheme",
            "class": "no-spell-check"
        }
    ]}
}}