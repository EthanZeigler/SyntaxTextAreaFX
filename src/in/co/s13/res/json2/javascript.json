{"javascript.json": [
    {
        "match": "\\\\((0-7){3}|(x[a-fA-F0-9]{2})|(c\\S)|([CM]-\\S)|(M-C-\\S)|.)",
        "id": "escape",
        "style-ref": "escape"
    },
    {
        "start": "(?<!\\\\)[[]",
        "end": "(?<!\\\\)]",
        "id": "regex-bracketed",
        "style-inside": true,
        "style-ref": "escape"
    },
    {
        "include": {"context": [
            {"ref": "escape"},
            {"ref": "def:line-continue"},
            {"ref": "regex-bracketed"}
        ]},
        "start": {
            "extended": true,
            "content": "((?<=([(]|\\s))|^)\n        \\/\n        (?=\n          ([^/\\\\]*(\\\\.))*\n          [^/]*\n          \\/\n          \\%{regex-opts}\n          \\s*\n          ([),;.\\/\\]:}]|$)\n        )"
        },
        "end": "\\/\\%{regex-opts}",
        "id": "regex-simple",
        "style-ref": "regex"
    },
    {
        "id": "undefined-value",
        "keyword": "undefined",
        "style-ref": "undefined-value"
    },
    {
        "id": "null-value",
        "keyword": null,
        "style-ref": "null-value"
    },
    {
        "id": "boolean",
        "keyword": [
            false,
            true
        ],
        "style-ref": "boolean"
    },
    {
        "id": "keywords",
        "keyword": [
            "break",
            "case",
            "catch",
            "continue",
            "debugger",
            "default",
            "delete",
            "do",
            "else",
            "export",
            "finally",
            "for",
            "function",
            "if",
            "import",
            "instanceof",
            "in",
            "new",
            "return",
            "switch",
            "this",
            "throw",
            "try",
            "typeof",
            "var",
            "void",
            "while",
            "with"
        ],
        "style-ref": "keyword"
    },
    {
        "id": "unofficial-keywords",
        "keyword": [
            "const",
            "let",
            "yield"
        ],
        "style-ref": "keyword"
    },
    {
        "id": "types",
        "keyword": [
            "Infinity",
            "NaN"
        ],
        "style-ref": "type"
    },
    {
        "id": "functions",
        "keyword": [
            "abs",
            "acos",
            "apply",
            "asin",
            "atan2",
            "atan",
            "call",
            "ceil",
            "charAt",
            "charCodeAt",
            "concat",
            "cos",
            "decodeURIComponent",
            "decodeURI",
            "encodeURIComponent",
            "encodeURI",
            "escape",
            "eval",
            "exec",
            "exp",
            "floor",
            "fromCharCode",
            "getDate",
            "getDay",
            "getFullYear",
            "getHours",
            "getMilliseconds",
            "getMinutes",
            "getMonth",
            "getSeconds",
            "getTime",
            "getTimezoneOffset",
            "getUTCDate",
            "getUTCDay",
            "getUTCFullYear",
            "getUTCHours",
            "getUTCMilliseconds",
            "getUTCMinutes",
            "getUTCMonth",
            "getUTCSeconds",
            "getYear",
            "hasOwnProperty",
            "indexOf",
            "isFinite",
            "isNaN",
            "isPrototypeOf",
            "join",
            "lastIndexOf",
            "localeCompare",
            "log",
            "match",
            "max",
            "min",
            "parseFloat",
            "parseInt",
            "parse",
            "pop",
            "pow",
            "propertyIsEnumerable",
            "push",
            "random",
            "replace",
            "reverse",
            "round",
            "search",
            "setDate",
            "setFullYear",
            "setHours",
            "setMilliseconds",
            "setMinutes",
            "setMonth",
            "setSeconds",
            "setTime",
            "setUTCDate",
            "setUTCFullYear",
            "setUTCHours",
            "setUTCMilliseconds",
            "setUTCMinutes",
            "setUTCMonth",
            "setUTCSeconds",
            "setYear",
            "shift",
            "sin",
            "slice",
            "sort",
            "split",
            "sqrt",
            "substring",
            "substr",
            "tan",
            "toDateString",
            "toExponential",
            "toFixed",
            "toGMTString",
            "toLocaleDateString",
            "toLocaleLowerCase",
            "toLocaleString",
            "toLocaleTimeString",
            "toLocaleUpperCase",
            "toLowerCase",
            "toPrecision",
            "toString",
            "toTimeString",
            "toUpperCase",
            "toUTCString",
            "unescape",
            "unshift",
            "UTC",
            "valueOf"
        ],
        "style-ref": "function"
    },
    {
        "prefix": "\\.",
        "id": "properties",
        "keyword": [
            "constructor",
            "global",
            "ignoreCase",
            "lastIndex",
            "length",
            "message",
            "multiline",
            "name",
            "NEGATIVE_INFINITY",
            "POSITIVE_INFINITY",
            "prototype",
            "source"
        ],
        "style-ref": "properties"
    },
    {
        "id": "constructors",
        "keyword": [
            "Array",
            "Boolean",
            "Date",
            "Error",
            "EvalError",
            "Function",
            "Math",
            "Number",
            "Object",
            "RangeError",
            "RegExp",
            "String",
            "SyntaxError",
            "TypeError",
            "URIError"
        ],
        "style-ref": "constructors"
    },
    {
        "id": "future-words",
        "keyword": [
            "class",
            "enum",
            "extends",
            "super",
            "implements",
            "interface",
            "package",
            "private",
            "protected",
            "public",
            "static"
        ],
        "style-ref": "future-words"
    },
    {
        "include": {"context": [
            {"ref": "def:c-like-comment"},
            {"ref": "def:c-like-comment-multiline"},
            {"ref": "def:c-like-close-comment-outside-comment"},
            {
                "ref": "def:string",
                "style-ref": "string"
            },
            {
                "ref": "def:single-quoted-string",
                "style-ref": "string"
            },
            {"ref": "def:float"},
            {"ref": "def:decimal"},
            {"ref": "def:octal"},
            {"ref": "def:hexadecimal"},
            {"ref": "undefined-value"},
            {"ref": "null-value"},
            {"ref": "boolean"},
            {"ref": "keywords"},
            {"ref": "unofficial-keywords"},
            {"ref": "types"},
            {"ref": "functions"},
            {"ref": "properties"},
            {"ref": "constructors"},
            {"ref": "future-words"},
            {"ref": "regex-simple"}
        ]},
        "id": "js",
        "class": "no-spell-check"
    }
]}