{"genie.json": [
    {
        "include": {"context": {"ref": "def:escape"}},
        "class-disabled": "no-spell-check",
        "start": "\"\"\"",
        "end": "\"\"\"",
        "id": "multiline-string",
        "style-ref": "multiline-string"
    },
    {
        "include": {"context": [
            {"ref": "c:printf"},
            {"ref": "def:escape"},
            {"ref": "def:line-continue"}
        ]},
        "class-disabled": "no-spell-check",
        "start": "\"",
        "end": "\"",
        "id": "double-quoted-string",
        "style-ref": "string",
        "end-at-line-end": true
    },
    {
        "include": {"context": [
            {"ref": "def:escape"},
            {"ref": "def:line-continue"}
        ]},
        "class-disabled": "no-spell-check",
        "start": "'",
        "end": "'",
        "id": "single-quoted-string",
        "style-ref": "string",
        "end-at-line-end": true
    },
    {
        "start": "/(?!/)",
        "end": "/",
        "id": "regex",
        "style-ref": "regex",
        "end-at-line-end": true
    },
    {
        "id": "namespace",
        "keyword": [
            "uses",
            "namespace"
        ],
        "style-ref": "namespace"
    },
    {
        "id": "primitives",
        "keyword": [
            "bool",
            "byte",
            "char",
            "date",
            "datetime",
            "decimal",
            "double",
            "float",
            "int",
            "long",
            "object",
            "sbyte",
            "short",
            "single",
            "string",
            "ulong",
            "ushort"
        ],
        "style-ref": "type"
    },
    {
        "id": "definitions",
        "keyword": [
            "const",
            "class",
            "construct",
            "def",
            "delegate",
            "enum",
            "exception",
            "extern",
            "event",
            "final",
            "get",
            "init",
            "inline",
            "interface",
            "override",
            "prop",
            "return",
            "set",
            "static",
            "struct",
            "var",
            "virtual",
            "weak"
        ],
        "style-ref": "definition"
    },
    {
        "id": "keywords",
        "keyword": [
            "abstract",
            "as",
            "and",
            "break",
            "case",
            "cast",
            "continue",
            "default",
            "delete",
            "div",
            "do",
            "downto",
            "dynamic",
            "else",
            "ensures",
            "except",
            "extern",
            "finally",
            "for",
            "if",
            "implements",
            "in",
            "isa",
            "is",
            "lock",
            "new",
            "not",
            "of",
            "out",
            "or",
            "otherwise",
            "pass",
            "private",
            "raise",
            "raises",
            "readonly",
            "ref",
            "requires",
            "to",
            "try",
            "unless",
            "when",
            "while"
        ],
        "style-ref": "keyword"
    },
    {
        "id": "special-variables",
        "keyword": [
            "self",
            "super"
        ],
        "style-ref": "special-variable"
    },
    {
        "id": "null-value",
        "keyword": null,
        "style-ref": "null-value"
    },
    {
        "id": "boolean",
        "keyword": [
            false,
            true
        ],
        "style-ref": "boolean"
    },
    {
        "match": {
            "extended": true,
            "content": "(?<![\\w\\.])\n        [0-9][0-9\\.]*(m|ms|d|h|s|f|F|l|L)?\n        (?![\\w\\.])"
        },
        "id": "numbers",
        "style-ref": "number"
    },
    {
        "id": "builtins",
        "keyword": [
            "array",
            "assert",
            "dict",
            "list",
            "max",
            "min",
            "print",
            "prop",
            "sizeof",
            "typeof"
        ],
        "style-ref": "builtin"
    },
    {
        "include": {"context": [
            {
                "ref": "def:shell-like-comment",
                "style-ref": "comment"
            },
            {
                "ref": "def:c-like-comment",
                "style-ref": "comment"
            },
            {
                "ref": "def:c-like-comment-multiline",
                "style-ref": "comment"
            },
            {"ref": "multiline-string"},
            {"ref": "double-quoted-string"},
            {"ref": "single-quoted-string"},
            {"ref": "regex"},
            {"ref": "namespace"},
            {"ref": "primitives"},
            {"ref": "definitions"},
            {"ref": "keywords"},
            {"ref": "special-variables"},
            {"ref": "null-value"},
            {"ref": "boolean"},
            {"ref": "numbers"},
            {"ref": "builtins"}
        ]},
        "id": "genie",
        "class": "no-spell-check"
    }
]}