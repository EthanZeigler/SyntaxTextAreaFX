{"java.json": [
    {
        "include": {"context": {
            "match": "\\%{escaped-character}",
            "id": "escaped-character",
            "style-ref": "escaped-character"
        }},
        "class-disabled": "no-spell-check",
        "start": "\"",
        "end": "\"",
        "id": "string",
        "class": "string",
        "style-ref": "string",
        "end-at-line-end": true
    },
    {
        "match": "'(\\%{escaped-character}|.)'",
        "id": "char",
        "style-ref": "char"
    },
    {
        "id": "externals",
        "keyword": [
            "import",
            "package"
        ],
        "style-ref": "external"
    },
    {
        "id": "declarations",
        "keyword": [
            "class",
            "enum",
            "extends",
            "implements",
            "instanceof",
            "interface",
            "native",
            "throws"
        ],
        "style-ref": "declaration"
    },
    {
        "id": "primitive-types",
        "keyword": [
            "boolean",
            "byte",
            "char",
            "double",
            "float",
            "int",
            "long",
            "short",
            "void"
        ],
        "style-ref": "type"
    },
    {
        "id": "storage-class",
        "keyword": [
            "abstract",
            "final",
            "static",
            "strictfp",
            "synchronized",
            "transient",
            "volatile"
        ],
        "style-ref": "storage-class"
    },
    {
        "id": "scope-declarations",
        "keyword": [
            "private",
            "protected",
            "public"
        ],
        "style-ref": "scope-declaration"
    },
    {
        "id": "flow",
        "keyword": [
            "assert",
            "break",
            "case",
            "catch",
            "continue",
            "default",
            "do",
            "else",
            "finally",
            "for",
            "if",
            "return",
            "throw",
            "switch",
            "try",
            "while"
        ],
        "style-ref": "keyword"
    },
    {
        "id": "memory",
        "keyword": [
            "new",
            "super",
            "this"
        ],
        "style-ref": "keyword"
    },
    {
        "id": "future-reserved-words",
        "keyword": [
            "const",
            "goto"
        ],
        "style-ref": "reserved"
    },
    {
        "id": "null-value",
        "keyword": null,
        "style-ref": "null-value"
    },
    {
        "id": "boolean",
        "keyword": [
            false,
            true
        ],
        "style-ref": "boolean"
    },
    {
        "match": {
            "extended": true,
            "content": "(\\b([0-9]+|0[xX][0-9a-fA-F]+)[Ll]?\\b|\n         \\b(([0-9]+[Ee][-]?[0-9]+|\n            ([0-9]*\\.[0-9]+|[0-9]+\\.)([Ee][-]?[0-9]+)?)[fFdD]?|\n            [0-9]+[FfDd]))"
        },
        "id": "numeric",
        "style-ref": "number"
    },
    {
        "include": {"context": [
            {
                "ref": "def:c-like-comment",
                "style-ref": "comment"
            },
            {
                "ref": "def:c-like-comment-multiline",
                "style-ref": "comment"
            },
            {"ref": "def:c-like-close-comment-outside-comment"},
            {"ref": "string"},
            {"ref": "char"},
            {"ref": "externals"},
            {"ref": "declarations"},
            {"ref": "primitive-types"},
            {"ref": "storage-class"},
            {"ref": "scope-declarations"},
            {"ref": "flow"},
            {"ref": "memory"},
            {"ref": "future-reserved-words"},
            {"ref": "null-value"},
            {"ref": "boolean"},
            {"ref": "numeric"}
        ]},
        "id": "java",
        "class": "no-spell-check"
    }
]}